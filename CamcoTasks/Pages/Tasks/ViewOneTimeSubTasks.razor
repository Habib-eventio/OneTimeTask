@page "/ViewOneTimeSubTasks"
@page "/ViewOneTimeSubTasks/{TaskId}"

@using CamcoTasks.ViewModels.TasksTaskUpdatesDTO;
@using CamcoTasks.ViewModels.TasksTasksDTO;
@using Syncfusion.Blazor.Grids
@using CamcoTasks.Library

<div class="col-12 navbar navbar-expand screenLabel position-fixed top-row m-0 p-0 screenLabelStyle">
    <div class="col-12 m-0 p-0" style="font-size: 18px; text-align: left;"><span style="float: left">Ma / Me / OnTiTa / VwOnTiSuTa</span></div>
</div>
<div class="col-12 mt-2" style="z-index: 9999;">
    <button style="margin-top:-68px;right:25px;height:45px;width:100px;"
            class="position-fixed btn btn-danger e-icons e-return-icon float-right" @onclick="(() => ReturnToTasks())">
    </button>
</div>

@if (IsSpinner)
{
    <Loading />
}
else
{
    <div class="row custom-top mt-1" style="margin-top: -20px;">
        <div class="col-md-4 text-left font-weight-bolder">
            <div class="pt-2">
                <h3 style="font-weight:bold">
                 ONE-TIME TASK #@TaskId SUB-TASK (@TaskCount)
                </h3>
            </div>
        </div>

        <div class="col-md-2 pt-2">
            <a href="javascript:void(0);" class="btn btn-dark btn-block btn-sm"
           role="button" data-placement="top" title="" data-original-title="Add"
           data-toggle="modal" data-target="#AddNewTask" @onclick="StartNewTask">ADD NEW TASK</a>
        </div>

        <div class="col-md-2 pt-2">
            <a href="/ReAssignTasks" class="btn btn-info btn-block btn-sm"
           role="button">REASSIGN TASKS</a>
        </div>

        <div class="col-md-2 pt-2">
            <a href="javascript:void(0);" class="btn btn-success btn-block btn-sm"
           role="button" data-placement="top" title="" data-original-title="Add"
           data-toggle="modal" data-target="#AddTypeDialog">ADD NEW TASK TYPE</a>
        </div>

        <div class="col-md-2 pt-2">
            <a href="javascript:void(0);" class="btn btn-warning btn-block btn-sm"
           role="button" @onclick="ViewTypes">VIEW TASK TYPES</a>
        </div>

    </div>

        <div class="row custom-top mb-2" style="margin-top: 0px; background-color: #D9E8FD; display: block">
            <span style="font-weight:bold; font-size:40px;">
                Task Description:
            </span>
            <span style="font-size:36px;">
                @(MainTaskViewModel.Description) 
            </span>
    </div>

    @if (Tasks != null)
    {
        <div class="row" style="margin-bottom:5px;">
            <div class="col-md-2">
                <SfDropDownList TItem="DDData" TValue="string" PopupHeight="230px" Width="240px" Index=0 DataSource="@DLData"
                        @bind-Value="TaskTypeValue">
                    <DropDownListEvents TItem="DDData" TValue="string" ValueChange="Changedata"></DropDownListEvents>
                    <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>

            <div class="col-md-2">
                <a href="javascript:void(0);" class="btn btn-primary btn-block btn-sm"
           role="button" data-placement="top" data-original-title="ReAssign TASKS"
           @onclick="(() => FilterFields(0))">ALL DEPARTMENTS</a>
            </div>
            <div class="col-md-2">
                <a href="javascript:void(0);" class="btn btn-primary btn-block btn-sm"
           role="button" data-placement="top" data-original-title="ReAssign TASKS"
           @onclick="(() => FilterFields(1))">LATHE</a>
            </div>
            <div class="col-md-2">
                <a href="javascript:void(0);" class="btn btn-primary btn-block btn-sm"
           role="button" data-placement="top" data-original-title="ReAssign TASKS"
           @onclick="(() => FilterFields(2))">MILL</a>
            </div>
            <div class="col-md-2">
                <a href="javascript:void(0);" class="btn btn-primary btn-block btn-sm"
           role="button" data-placement="top" data-original-title="ReAssign TASKS"
           @onclick="(() => FilterFields(3))">QUALITY</a>
            </div>
        </div>

        <div class="row YellowText">
            @* Parent *@
            <Syncfusion.Blazor.Grids.SfGrid DataSource="@Tasks" ID="container"
                                    Toolbar="@(new List<object>() { "Print","ExcelExport" ,"PdfExport","CsvExport","Search" })" Height="500"
                                    @ref="TaskGrid" AllowSelection="true" AllowSorting="true"
                                    AllowExcelExport="true" AllowPdfExport="true"
                                    AllowTextWrap="true" AllowFiltering="true" EnableHover="false" RowHeight="38">
                <Syncfusion.Blazor.Grids.GridEvents OnToolbarClick="ToolbarClickHandler" DetailDataBound="DetailDataBoundHandler"
                                            TValue="TasksTasksViewModel">
                </Syncfusion.Blazor.Grids.GridEvents>
                <GridSelectionSettings CheckboxOnly="true" PersistSelection="true" Type="SelectionType.Multiple">
                </GridSelectionSettings>
                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                <GridPageSettings PageSize="50" PageSizes="@PageSizes"></GridPageSettings>
                <GridColumns>
                    <GridColumn TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Left" AllowFiltering="false"
                        Field=@nameof(TasksTasksViewModel.Id) HeaderText="ID" Visible="true" IsPrimaryKey=" false"
                        Width="55">
                    </GridColumn>
                    <GridColumn TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Left"
                        EditType="EditType.NumericEdit" Field=@nameof(TasksTasksViewModel.Priority)
                        AllowEditing="true" AllowAdding="true" HeaderText="PRIORITY"
                        Visible="true" IsPrimaryKey="false" Width="90">
                        <Template>
                            @{
                        var tasksTasks = (context as TasksTasksViewModel);
                    }
                    <div @onkeydown:stopPropagation="true">
                        <input type="number" style="width:100%" value="@tasksTasks.Priority"
                               @onchange="@(e =>  ChangePriorityVal(e,tasksTasks))" />
                    </div>
                </Template>
            </GridColumn>
            <GridColumn TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Left"
                        Field=@nameof(TasksTasksViewModel.Initiator) HeaderText="Initiator"
                        ClipMode="ClipMode.EllipsisWithTooltip" Width="145"
                        FilterSettings="@(new FilterSettings { Type = Syncfusion.Blazor.Grids.FilterType.Excel })"></GridColumn>
            <GridColumn TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Left"
                        Field=@nameof(TasksTasksViewModel.TaskType) HeaderText="TASK TYPE"
                        ClipMode="ClipMode.EllipsisWithTooltip" Width="145"
                        FilterSettings="@(new FilterSettings { Type = Syncfusion.Blazor.Grids.FilterType.Excel })"></GridColumn>
            <GridColumn TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Left"
                        Field=@nameof(TasksTasksViewModel.Description) Width="@ColWidth" HeaderText="DESCRIPTION" AllowFiltering="false"
                        FilterSettings="@(new FilterSettings { Type = Syncfusion.Blazor.Grids.FilterType.Menu })"></GridColumn>
            <GridColumn TextAlign="TextAlign.Center" HeaderTextAlign="TextAlign.Center" HeaderText="REVIEWED" Width="140"
                        FilterSettings="@(new FilterSettings { Type = Syncfusion.Blazor.Grids.FilterType.Menu })">
                <Template>
                    @{
                        var hw = (context as TasksTasksViewModel);
                            <div class="form-check" style="margin-bottom:15px;">
                                <input class="form-check-input" type="checkbox"
                                       @onchange="(e => ReviewCheckedChanged(e,hw))" checked="@hw.IsReviewed">
                            </div>
                    }
                </Template>
            </GridColumn>
            <GridColumn TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Left"
                        Field=@nameof(TasksTasksViewModel.DateAdded) HeaderText="DATE ADDED" Width="130" Format="MM/dd/yyyy"
                        FilterSettings="@(new FilterSettings { Type = Syncfusion.Blazor.Grids.FilterType.Menu })"
                        ClipMode="ClipMode.EllipsisWithTooltip"></GridColumn>
            <GridColumn TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Left"
                        Field=@nameof(TasksTasksViewModel.LatestUpdate) HeaderText="LATEST UPDATE" Width="135" Format="MM/dd/yyyy"
                        FilterSettings="@(new FilterSettings { Type = Syncfusion.Blazor.Grids.FilterType.Menu })"
                        ClipMode="ClipMode.EllipsisWithTooltip"></GridColumn>
            <GridColumn TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Left" Visible="@(StatusDropdownVal== "3")"
                        Field=@nameof(TasksTasksViewModel.DateCompleted)
                        HeaderText="DATE COMPLETED" Format="MM/dd/yyyy" Width="160" FilterSettings="@(new FilterSettings { Type = Syncfusion.Blazor.Grids.FilterType.Menu })" ClipMode="ClipMode.EllipsisWithTooltip"></GridColumn>
            <GridColumn TextAlign="TextAlign.Center" HeaderTextAlign="TextAlign.Center" HeaderText="ACTION"
                        ClipMode="ClipMode.EllipsisWithTooltip" Width="160">
                <Template>
                    @{
                        var hw = (context as TasksTasksViewModel);
                            <a href="javascript:void(0);" type="button"
                       style="font-size: 12px; min-width: 45px; margin-bottom: 3px; "
                       title="" data-original-title="Edit" data-toggle="modal" data-target="#ViewEditTask"
                               @onclick="(e => EditItem(hw))">
                                <img src="/Icons/Finalized/Edit Button/Power User/Png Files/E2 30x30.png" class="icon" />
                            </a>

                            <a id="btn1" href="javascript:void(0);"
                       style="font-size: 12px; margin-left: 3px; min-width: 45px; margin-bottom: 3px;"
                       type="button" data-placement="top" title="" data-original-title="Delete" data-toggle="modal" data-target="#deleteTask"
                               @onclick="(() => StartDelete(hw))">
                                <img src="/Icons/Finalized/Delete Button/Power User/Png Files/D3 30x30.png" class="icon" />
                            </a>

                            <a data-placement="top" title="Email Task" data-toggle="tooltip" type="button"
                       style="font-size: 12px; margin-left: 3px; min-width: 45px; margin-bottom: 3px;"
                               @onclick="(() => StartEmail(context as TasksTasksViewModel))">
                                <img src="/Icons/Finalized/Email Button/Power User/Png Files/Em2_Org 30x30.png" class="icon" />
                                <label style="font-size:16px">(@hw.EmailCount)</label>
                            </a>

                            <a data-placement="top" title="Send Email" data-toggle="tooltip" type="button"
                       style="font-size: 12px; margin-left: 3px; min-width: 140px; margin-bottom: 3px;"
                               @onclick="(e => SendEmail((context as TasksTasksViewModel),true))">
                                <img src="/Icons/Nudge.png" style="width:115px;" />
                                <label style="font-size:16px">(@hw.NudgeCount)</label>
                            </a>

                            <a href="javascript:void(0);"
                       style="font-size: 12px; margin-left: 3px; min-width: 140px; margin-bottom: 3px;"
                       type="button" data-placement="top" title="Task Updates"
                       data-original-title="Task Updates" data-toggle="modal" data-target="#TaskUpdatesModal"
                               @onclick="(e => ViewTaskUpdates((context as TasksTasksViewModel)))">
                                <img src="/Icons/ViewUpdates.png" style="width:140px;" />
                            </a>
                    }
                </Template>
            </GridColumn>
        </GridColumns>
    </Syncfusion.Blazor.Grids.SfGrid>
</div>

        <div class="modal fade" id="TaskUpdatesModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel" style="font-weight:bold;">VIEW ONE-TIME TASK UPDATES</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row" style="margin-bottom:20px;text-align:center">
                            <div class="col-md-12" style="margin-bottom:10px;">
                                <span style="font-size: 18px;font-weight: 600;">
                                    @UpdatesTask.Description
                                </span>
                            </div>
                            <div class="col-md-2">
                                <a id="btn1" href="javascript:void(0);" class="btn btn-primary btn-sm btn-block"
                           role="button" data-placement="top" title="" data-toggle="modal" data-target="#AddTaskUpdate"
                           data-original-title="Add" @onclick="@(e => RefreshUpdateModal(true))">
                                    ADD UPDATE
                                </a>
                            </div>
                            @if (UpdatesTask.ImagesCount > 0)
                            {
                                <div class="col-md-2">
                                    <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block btn-block"
                                       style="margin-left:5px"
                                       role="button" data-placement="top" title="" data-original-title="View"
                                       data-toggle="modal" data-target="#MultiImagesModal"
                                       @onclick="(() => LoadTaskImages(UpdatesTask))">
                                        VIEW TASK IMAGES
                                    </a>
                                </div>
                            }

                            @if (UpdatesTask.FilesCount > 0)
                            {
                                <div class="col-md-2">
                                    <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block btn-block"
                                       style="margin-left:5px"
                                       role="button" data-placement="top" title="" data-original-title="View"
                                       data-toggle="modal" data-target="#MultiFilesModal"
                                       @onclick="(() => LoadTaskFiles(UpdatesTask))">
                                        VIEW TASK FILES
                                    </a>
                                </div>
                            }

                            <div class="col-md-12">
                                <SfGrid @ref="UpdateGrid" DataSource="@UpdatesTask.TasksTaskUpdates" ID="Detailscontainer"
                                AllowSelection="true" AllowSorting="true" AllowPaging="false" AllowResizing="true"
                                AllowTextWrap="true" EnableHover="true" RowHeight="38">

                                    <GridSelectionSettings Mode="Syncfusion.Blazor.Grids.SelectionMode.Row"></GridSelectionSettings>
                                    <GridColumns>
                                        <GridColumn TextAlign="TextAlign.Center" HeaderTextAlign="TextAlign.Center"
                                            Format="MM/dd/yyyy" DefaultValue="@DateTime.Today"
                                            Field=@nameof(TasksTaskUpdatesViewModel.UpdateDate)
                                            HeaderText="UPDATE DATE" Width="150"></GridColumn>
                                        <GridColumn TextAlign="TextAlign.Left" HeaderTextAlign="TextAlign.Center"
                                            Field=@nameof(TasksTaskUpdatesViewModel.Update) HeaderText="UPDATE" Width="700"
                                            ClipMode="ClipMode.EllipsisWithTooltip"></GridColumn>
                                        <GridColumn TextAlign="TextAlign.Center" HeaderTextAlign="TextAlign.Center" Width="220"
                                            AllowFiltering="false" AutoFit="true" HeaderText="ACTION">
                                            <Template Context="EditDeleteContext">
                                                <a id="btn1" href="javascript:void(0);"
                                           role="button" data-placement="top" title=""
                                           data-original-title="Edit" data-toggle="modal" data-target="#EditUpdateDialog"
                                           @onclick="(() => ShowUpdateEditDialogHandler(UpdatesTask,EditDeleteContext as TasksTaskUpdatesViewModel))">
                                                    <img src="/Icons/Finalized/Edit Button/Power User/Png Files/E2 30x30.png" style="width:40px;" />
                                                </a>
                                                <a id="btn1" href="javascript:void(0);"
                                           role="button" data-placement="top" title="" data-original-title="Delete"
                                           data-toggle="modal" data-target="#deleteModal"
                                           @onclick="(() => DeleteUpdateConfirm(UpdatesTask,EditDeleteContext as TasksTaskUpdatesViewModel))">
                                                    <img src="/Icons/Finalized/Delete Button/Power User/Png Files/D3 30x30.png" style="width:40px;" />
                                                </a>
                                                <a id="btn1" href="javascript:void(0);"
                                           data-target="#RespondModal" data-toggle="modal"
                                           role="button" data-placement="top" title="" data-original-title="Email"
                                           @onclick="(() => StartRespond(EditDeleteContext as TasksTaskUpdatesViewModel))">
                                                    <img src="/Icons/Finalized/Email Button/Power User/Png Files/Em2_Org 30x30.png" class="icon" />
                                                </a>

                                                @if (!string.IsNullOrEmpty((EditDeleteContext as TasksTaskUpdatesViewModel).PictureLink))
                                                {
                                                    if(IsImage((EditDeleteContext as TasksTaskUpdatesViewModel).PictureLink))
                                                    {
                                                        <a id="btn1" href="javascript:void(0);"
                                                            type="button" data-placement="top" title="" data-original-title="Delete"
                                                            data-toggle="modal" data-target="#ImageModal"
                                                            @onclick="(() => ViewUpdateImage(EditDeleteContext as TasksTaskUpdatesViewModel))">
                                                            <img src="/Icons/ViewImage.png" class="icon" />
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <a id="btn1" href="javascript:void(0);"
                                                            type="button" data-placement="top" title="" data-original-title="Delete"
                                                            data-toggle="modal" data-target="#FileModal"
                                                            @onclick="(() => ViewUpdateImage(EditDeleteContext as TasksTaskUpdatesViewModel))">
                                                            <img src="/Icons/ViewImage.png" class="icon" />
                                                        </a>
                                                    }
                                                    
                                                }
                                    </Template>
                                </GridColumn>
                            </GridColumns>
                        </SfGrid>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" data-dismiss="modal"><i class="flaticon-cancel-12"></i>CLOSE</button>
            </div>
        </div>
    </div>

</div>

    }

    <!--delete task Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true"
     style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">DELETE UPDATE</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    <h4>DO YOU WANT TO DELETE THIS UPDATE ?</h4>
                    <table class="table table-danger">
                        <tr>
                            <td>ID:</td>
                            <td>@DeleteViewModelUpdate.UpdateId</td>
                        </tr>
                        <tr>
                            <td>UPDATE DATE:</td>
                            <td>@DeleteViewModelUpdate.UpdateDate</td>
                        </tr>
                        <tr>
                            <td>UPDATE:</td>
                            <td>@DeleteViewModelUpdate.Update</td>
                        </tr>
                        <tr>
                            <td>TASK ID:</td>
                            <td>@DeleteViewModelUpdate.TaskID</td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="flaticon-cancel-12"></i> NO</button>
                    <button type="button" data-dismiss="modal" class="btn btn-success"
                        @onclick="(async () => await DeleteUpdate(DeleteViewModelUpdate))">
                        YES
                    </button>
                </div>
            </div>
        </div>
    </div>

    
    <!--add new task modal-->
    <div class="modal fade" id="AddNewTask" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">ADD NEW TASK</h5>
                    <div class="col-md-4 text-right">
                        <button class="btn btn-danger" data-dismiss="modal" @onclick="CleaneTaskFiles"><i class="flaticon-cancel-12"></i>CANCEL</button>
                        
                         @if (IsDoingTask)
                        {
                            <div class="spinner-border text-success ml-3" role="status">
                                <span class="sr-only"></span>
                            </div>
                        }
                        else
                        {
                            <button type="button" class="btn btn-success m-2"
                                @onclick="(async () => await HandleValidAdd())">
                                SAVE
                            </button>
                        }
                    </div>
                </div>
                <div class="modal-body">
                    <EditForm Model="@NewTask">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="row" style="margin-bottom:20px;text-align:center">
                            <div class="col-sm col-md-6">
                                <div class="form-group">
                                    <label style="float: left; font-weight: bold; margin-bottom: 0px !important; ">TASK TYPE</label>


                                    <SfComboBox @ref="TaskeTypeCombo" ID="TaskTypeIdAddTask" CssClass="BackgroundCustom" TItem="string" TValue="string"
                                            Autofill="true" AllowFiltering="true" DataSource="@TaskTypesAll"
                                            @bind-Value="NewTask.TaskType"
                                            FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains">
                                        <ComboBoxEvents TItem="string" TValue="string" ValueChange="CheckTaskType"></ComboBoxEvents>
                                    </SfComboBox>


                                </div>

                                <div class="form-group" style="float:left; width:100%">
                                    <label style="float: left; font-weight: bold; margin-bottom: 0px !important; ">DATE ADDED</label>

                                    <Syncfusion.Blazor.Calendars.SfDatePicker ID="DateIdAddTask" CssClass="BackgroundCustom" @bind-Value="NewTask.DateAdded">
                                        <Syncfusion.Blazor.Calendars.DatePickerEvents TValue="DateTime?" ValueChange="CheckDateAdded"></Syncfusion.Blazor.Calendars.DatePickerEvents>
                                    </Syncfusion.Blazor.Calendars.SfDatePicker>

                                </div>

                                <div class="form-group" style="float:left; width:100%">
                                    <label style="float: left; font-weight: bold; margin-bottom: 0px !important; ">DEPARTMENT</label>

                                    <SfComboBox TItem="string" TValue="string" Autofill="true" AllowFiltering="true"
                                            CssClass="BackgroundCustomWhite"
                                            DataSource="@DepartmentsViewModel" @bind-Value="NewTask.Department"
                                            FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains">
                                    </SfComboBox>

                                </div>
                                @*<div class="form-group" style="float:left; width:100%">
                                    <label style="float:left;" class="col-form-label">Date Completed</label>
                                    <Syncfusion.Blazor.Calendars.SfDatePicker @bind-Value="NewTask.DateCompleted">
                                    </Syncfusion.Blazor.Calendars.SfDatePicker>
                                    </div>*@
                            </div>

                            <div class="col-sm col-md-6">
                                <div class="form-group">
                                    <label style="float: left; font-weight: bold;">INITIATOR</label>

                                    <SfComboBox CssClass="BackgroundCustom" TItem="string" TValue="string" ID="InitiatorIdAddTask"
                                            Autofill="true" AllowFiltering="true" DataSource="@Employees"
                                            @bind-Value="NewTask.Initiator"
                                            FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains">
                                        <ComboBoxEvents TValue="string" TItem="string" ValueChange="CheckInitiator"></ComboBoxEvents>
                                    </SfComboBox>

                                </div>

                                <div class="form-group" style="float:left; width:100%">
                                    <label style="float: left; font-weight: bold; margin-bottom: 0px !important; ">PRIORITY</label><br />
                                    <InputNumber style="width:100%" id="priority" @bind-Value="NewTask.Priority" />

                                </div>

                                <div class="form-group" style="margin-top: 103px;">
                                    <Syncfusion.Blazor.Inputs.SfUploader AllowMultiple="true" AllowedExtensions=".docx,.doc,.pdf, .xlsx, .xls, .csv, .xlsb, .pptx, .docx, .jpg,.png,.gif, .jpeg, .bmp,.svg,  .jfif, .apng, .ico"
                                                                         ID="UploadFilesNew" AutoUpload="true" Multiple="true"
                                                                         @ref="UploadObj">
                                        <Syncfusion.Blazor.Inputs.UploaderEvents BeforeUpload="BeforeUploadImage"
                                                                                 ValueChange="SelectTaskImages"
                                                                                 BeforeRemove="RemoveTaskPreImage" />
                                    </Syncfusion.Blazor.Inputs.SfUploader>
                                </div>

                                @if(RecentTaskImagesCount > 0 && RecentTaskFilesCount == 0)
                                {
                                    <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block mt-1" style="margin-left:5px" role="button" data-placement="top" title="" data-original-title="View" data-toggle="modal" data-target="#PreImageModal" @onclick="TaskPreViewImage"> VIEW TASK IMAGES</a>
                                }
                                else if (RecentTaskFilesCount > 0 && RecentTaskImagesCount == 0)
                                {
                                    <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block mt-1" style="margin-left:5px" role="button" data-placement="top" title="" data-original-title="View" data-toggle="modal" data-target="#PreFileModal" @onclick="TaskPreViewFiles"> VIEW TASK FILES</a>
                                }
                                else if (RecentTaskImagesCount > 0 && RecentTaskFilesCount > 0)
                                {
                                    <div class="row">
                                        <div class="col-6">
                                            <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block mt-1" style="margin-left:5px" role="button" data-placement="top" title="" data-original-title="View" data-toggle="modal" data-target="#PreImageModal" @onclick="TaskPreViewImage"> VIEW TASK IMAGES</a>
                                        </div>
                                        <div class="col-6">
                                            <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block mt-1" style="margin-left:5px" role="button" data-placement="top" title="" data-original-title="View" data-toggle="modal" data-target="#PreFileModal" @onclick="TaskPreViewFiles"> VIEW TASK Files</a>
                                        </div>
                                    </div>
                                }
                            </div>

                            <div class="col-md-12">
                                <label style="float: left; font-weight: bold; margin-bottom: 0px !important; ">DESCRIPTION</label><br />

                                <Syncfusion.Blazor.Inputs.SfTextBox ID="DescriptionIdAddTask" Multiline="true" CssClass="BackgroundCustom Textarea"
                                                                OnChange="CheckDescription" @bind-Value="NewTask.Description" />

                            </div>
                        </div>
                    </EditForm>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>

    <!-- Image Modal -->
    <div class="modal fade bd-example-modal-xl" id="ImageModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true" style="z-index:5555; background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">VIEW IMAGE</h5>
                    <button type="button" style="margin-left: 10px; width:100px;" @onclick="@(()=> PrintingImage(TaskImage))" class="btn btn-primary btn-sm">Print</button>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    @if (!string.IsNullOrEmpty(TaskImage))
                    {
                        <div class="form-group">
                            <img class="d-block w-100" src=@TaskImage alt="RECURRING Task Image">
                        </div>
                    }
                    else
                    {
                        <em>No Image Found</em>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn btn-danger">CLOSE</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="ViewEditTask" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">VIEW / EDIT One-Time TASK</h5>
                    <div class="col-md-4 text-right">
                        <button class="btn btn-danger" data-dismiss="modal" @onclick="CleaneTaskFiles"><i class="flaticon-cancel-12"></i>CANCEL</button>
                        @if (IsDoingTask)
                        {
                            <div class="spinner-border text-success ml-3" role="status">
                                <span class="sr-only"></span>
                            </div>
                        }
                        else
                        {
                            <button type="button" class="btn btn-success m-2"
                                @onclick="(async () => await HandleValidEdit())">
                                SAVE
                            </button>
                        }
                        
                    </div>
                </div>
                <div class="modal-body">
                    <EditForm Model="@SelectedTask">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="row" style="margin-bottom:20px;text-align:center">
                            <div class="col-sm col-md-6">

                                <div class="form-group">
                                    <label style="float: left; font-weight: bold; margin-bottom: 0px !important;">TASK TYPE</label>
                                    <SfComboBox ID="EditTaskTypeId" CssClass="BackgroundCustom" TItem="string" TValue="string"
                                            DataSource="@TaskTypesAll" Autofill="true" AllowFiltering="true"
                                            @bind-Value="SelectedTask.TaskType"
                                            FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains">
                                        <ComboBoxEvents TValue="string" TItem="string" ValueChange="CheckEditTaskType"></ComboBoxEvents>
                                    </SfComboBox>
                                </div>

                                <div class="form-group" style="float:left; width:100%">
                                    <label style="float: left; font-weight: bold; margin-bottom: 0px !important;">DATE ADDED</label><br />
                                    <Syncfusion.Blazor.Calendars.SfDatePicker ID="EditTaskDateId" CssClass="BackgroundCustom" @bind-Value="SelectedTask.DateAdded">
                                        <Syncfusion.Blazor.Calendars.DatePickerEvents TValue="DateTime?" ValueChange="CheckEditDateAdded"></Syncfusion.Blazor.Calendars.DatePickerEvents>
                                    </Syncfusion.Blazor.Calendars.SfDatePicker>
                                </div>

                                <div class="form-group" style="float:left; width:100%">
                                    <label style="float: left; font-weight: bold; margin-bottom: 0px !important;">DATE COMPLETED</label><br />
                                    <Syncfusion.Blazor.Calendars.SfDatePicker @bind-Value="SelectedTask.DateCompleted">
                                    </Syncfusion.Blazor.Calendars.SfDatePicker>
                                </div>

                                <div class="form-group" style="float:left; width:100%">
                                    <label style="float: left; font-weight: bold; margin-bottom: 0px !important; ">DEPARTMENT</label>
                                    <SfComboBox TItem="string" TValue="string" Autofill="true" AllowFiltering="true"
                                            DataSource="@DepartmentsViewModel" @bind-Value="SelectedTask.Department"
                                            FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains">
                                    </SfComboBox>
                                </div>

                            </div>

                            <div class="col-sm col-md-6">
                                <div class="form-group">
                                    <label style="float: left; font-weight: bold; margin-bottom: 0px !important;">INITIATOR</label>
                                    <SfComboBox CssClass="BackgroundCustom" TItem="string" TValue="string"
                                            ID="EditTaskInitiatortId" Autofill="true" AllowFiltering="true" DataSource="@Employees"
                                            @bind-Value="SelectedTask.Initiator"
                                            FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains">
                                        <ComboBoxEvents TItem="string" TValue="string" ValueChange="CheckEditInitiator" />
                                    </SfComboBox>
                                </div>

                                <div class="form-group" style="float:left; width:100%">
                                    <label style="float: left; font-weight: bold; margin-bottom: 0px !important; ">PRIORITY</label><br />
                                    <InputNumber style="width:100%;" id="priority" @bind-Value="SelectedTask.Priority" />
                                </div>

                                <div class="form-group" style="margin-top: 103px;">
                                    <Syncfusion.Blazor.Inputs.SfUploader AllowMultiple="true" AllowedExtensions=".pdf,.txt,.pptx,.zip,.rar,.pdf,.pptx,.docx,.doc,.xlsx,.xlsb,.csv,.jpg,.png,.gif,.jpeg,.bmp,.svg,.jfif,.apng,.ico"
                                                                     ID="EdittasksUploadFiles" AutoUpload="true" Multiple="true" @ref="TaskUploadRef">
                                        <Syncfusion.Blazor.Inputs.UploaderEvents ValueChange="SelectTaskImages" BeforeRemove="RemoveTaskPreImage" />
                                    </Syncfusion.Blazor.Inputs.SfUploader>
                                </div>

                                @if(RecentTaskImagesCount > 0 && RecentTaskFilesCount == 0)
                                {
                                    <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block mt-1" style="margin-left:5px" role="button" data-placement="top" title="" data-original-title="View" data-toggle="modal" data-target="#PreSaveImageModal" @onclick="TaskPreViewImage"> VIEW TASK IMAGES</a>
                                }
                                else if (RecentTaskFilesCount > 0 && RecentTaskImagesCount == 0)
                                {
                                    <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block mt-1" style="margin-left:5px" role="button" data-placement="top" title="" data-original-title="View" data-toggle="modal" data-target="#PreSaveFileModal" @onclick="TaskPreViewFiles"> VIEW TASK FILES</a>
                                }
                                else if (RecentTaskImagesCount > 0 && RecentTaskFilesCount > 0)
                                {
                                    <div class="row">
                                        <div class="col-6">
                                            <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block mt-1" style="margin-left:5px" role="button" data-placement="top" title="" data-original-title="View" data-toggle="modal" data-target="#PreSaveImageModal" @onclick="TaskPreViewImage"> VIEW TASK IMAGES</a>
                                        </div>
                                        <div class="col-6">
                                            <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block mt-1" style="margin-left:5px" role="button" data-placement="top" title="" data-original-title="View" data-toggle="modal" data-target="#PreSaveFileModal" @onclick="TaskPreViewFiles"> VIEW TASK Files</a>
                                        </div>
                                    </div>
                                }

                                @if(UpdatesTask.ImagesCount > 0 && UpdatesTask.FilesCount == 0)
                                {
                                    <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block mt-1 btn-primary" style="margin-left:5px" role="button" data-placement="top" title="" data-original-title="View" data-toggle="modal" data-target="#MultiImagesModal" @onclick="(() => LoadTaskImages(SelectedTask))">SAVE TASK IMAGES VIEW</a>
                                }
                                else if (UpdatesTask.FilesCount > 0 && UpdatesTask.ImagesCount == 0)
                                {
                                    <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block mt-1 btn-primary" style="margin-left:5px" role="button" data-placement="top" title="" data-original-title="View" data-toggle="modal" data-target="#MultiFilesModal" @onclick="(() => LoadTaskFiles(SelectedTask))">SAVE TASK Files VIEW</a>
                                }
                                else if (UpdatesTask.FilesCount > 0 && UpdatesTask.ImagesCount > 0)
                                {
                                    <div class="row">
                                        <div class="col-6">
                                            <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block mt-1 btn-primary" style="margin-left:5px" role="button" data-placement="top" title="" data-original-title="View" data-toggle="modal" data-target="#MultiImagesModal" @onclick="(() => LoadTaskImages(SelectedTask))">SAVE TASK IMAGES VIEW</a>
                                        </div>
                                        <div class="col-6">
                                            <a id="btn1" href="javascript:void(0);" class="btn btn-info btn-sm btn-block mt-1 btn-primary" style="margin-left:5px" role="button" data-placement="top" title="" data-original-title="View" data-toggle="modal" data-target="#MultiFilesModal" @onclick="(() => LoadTaskFiles(SelectedTask))">SAVE TASK Files VIEW</a>
                                        </div>
                                    </div>
                                }

                            </div>

                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <label style="float: left; font-weight: bold; margin-bottom: 0px !important;">DESCRIPTION</label><br />
                                <Syncfusion.Blazor.Inputs.SfTextBox CssClass="BackgroundCustom" Multiline="true" ID="EditTaskDescriptionId"
                                                                OnChange="CheckEditDescription" @bind-Value="SelectedTask.Description" />
                            </div>
                        </div>
                    </EditForm>

                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>

    <!--preview image modal-->
    <div class="modal fade bd-example-modal-xl" id="PreImageModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true" style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">IMAGE VIEWS</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    @if (PreviewImages.Any())
                    {
                        if (IsRenderingImages)
                        {
                            <p><em>LOADING...</em></p>
                        }
                        else
                        {
                            <div class="col-md-12" style="height:500px; overflow-y:scroll;">
                                <div class="row" style="margin-bottom:30px;">
                                    @foreach (var taskImage in PreviewImages)
                                    {
                                        <div class="col-md-4" style="margin-bottom:10px;">
                                            <div class="card text-center cardhover">
                                                <div class="card-body" style="padding:0 !important">
                                                    <div class="form-group" style="margin-bottom:5px;">
                                                        <img class="d-block w-100"
                                                             src="@taskImage.Value"
                                                             style="height: 200px;" alt="IMAGE VIEW"
                                                        data-toggle="modal" data-target="#ImageModal"
                                                            @onclick="(() => ViewImage(taskImage.Value,false))">
                                                    </div>
                                                     <p class="card-text" style="color:black"> Click To View Image</p>
                                                </div>
                                                <div class="card-footer" style="background-color:white">
                                                        <button type="button" class="btn btn-sm btn-danger"
                                                            data-toggle="modal" data-target="#PreDeleteImageModal"
                                                            @onclick="(() => StartDeleteTaskPreImage(taskImage.Key))">
                                                            DELETE IMAGE
                                                        </button>
                                                  </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <label class="text-center">NO IMAGES UPLOADED YET</label>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn btn-danger">CLOSE</button>
                </div>
            </div>
        </div>
    </div>

    <!-- preview Files Modal -->
    <div class="modal fade bd-example-modal-xl" id="PreFileModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true" style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">ONE-TIME TASK Files</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    @if (PreviewFiles.Any())
                    {
                        if (IsRenderingFiles)
                        {
                            <p><em>LOADING...</em></p>
                        }
                        else
                        {
                            <div class="col-md-12" style="height:500px; overflow-y:scroll;">
                                <div class="row" style="margin-bottom:30px;">
                                    @foreach (var taskFile in PreviewFiles)
                                    {
                                        <div class="col-md-4" style="margin-bottom:10px;">
                                            <div class="card text-center cardhover">
                                                <div class="card-body" style="padding:0 !important">
                                                    <i class="@FileLogo.ReturnFileLogo(taskFile.Key) m-2"></i>
                                                    <p class="card-text" style="color:black">@taskFile.Key</p>
                                                 
                                                </div>
                                                
                                                <div class="card-footer" style="background-color:white">
                                                   @* <a id="btn1" class="btn btn-info btn-sm text-white btn-block"
                                                       style="margin-left:5px;" @onclick="(()=>StartDownloadFile(taskFile.PictureLink))"
                                                       role="button" data-placement="top" title="" data-original-title="Download">
                                                        DOWNLOAD FILE
                                                    </a>*@
                                                    <button type="button" class="btn btn-sm btn-danger"
                                                        data-toggle="modal" data-target="#PreDeleteFileModal"
                                                        @onclick="(() => StartDeleteTaskPreImage(taskFile.Key))">
                                                        DELETE FILE
                                                    </button>
         
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <label class="text-center">NO FILES UPLOADED YET</label>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn btn-danger">CLOSE</button>
                </div>
            </div>
        </div>
    </div>

    <!--preview image modal-->
    <div class="modal fade bd-example-modal-xl" id="PreSaveImageModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true" style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">IMAGE VIEWS</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    @if (PreviewImages.Any())
                    {
                        if (IsRenderingImages)
                        {
                            <p><em>LOADING...</em></p>
                        }
                        else
                        {
                            <div class="col-md-12" style="height:500px; overflow-y:scroll;">
                                <div class="row" style="margin-bottom:30px;">
                                    @foreach (var taskImage in PreviewImages)
                                    {
                                        <div class="col-md-4" style="margin-bottom:10px;">
                                            <div class="card text-center cardhover">
                                                <div class="card-body" style="padding:0 !important">
                                                    <div class="form-group" style="margin-bottom:5px;">
                                                        <img class="d-block w-100"
                                                             src="@taskImage.Value"
                                                             style="height: 200px;" alt="IMAGE VIEW"
                                                        data-toggle="modal" data-target="#ImageModal"
                                                            @onclick="(() => ViewImage(taskImage.Value,false))">
                                                    </div>
                                                     <p class="card-text" style="color:black"> Click To View Image</p>
                                                </div>
                                                <div class="card-footer" style="background-color:white">
                                                        <button type="button" class="btn btn-sm btn-danger"
                                                            data-toggle="modal" data-target="#PreDeleteSaveImageModal"
                                                            @onclick="(() => StartDeleteTaskPreImage(taskImage.Key))">
                                                            DELETE IMAGE
                                                        </button>
                                                  </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <label class="text-center">NO IMAGES UPLOADED YET</label>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn btn-danger">CLOSE</button>
                </div>
            </div>
        </div>
    </div>

    <!-- preview Files Modal -->
    <div class="modal fade bd-example-modal-xl" id="PreSaveFileModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true" style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">ONE-TIME TASK Files</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    @if (PreviewFiles.Any())
                    {
                        if (IsRenderingFiles)
                        {
                            <p><em>LOADING...</em></p>
                        }
                        else
                        {
                            <div class="col-md-12" style="height:500px; overflow-y:scroll;">
                                <div class="row" style="margin-bottom:30px;">
                                    @foreach (var taskFile in PreviewFiles)
                                    {
                                        <div class="col-md-4" style="margin-bottom:10px;">
                                            <div class="card text-center cardhover">
                                                <div class="card-body" style="padding:0 !important">
                                                    <i class="@FileLogo.ReturnFileLogo(taskFile.Key) m-2"></i>
                                                    <p class="card-text" style="color:black">@taskFile.Key</p>
                                                 
                                                </div>
                                                
                                                <div class="card-footer" style="background-color:white">
                                                   @* <a id="btn1" class="btn btn-info btn-sm text-white btn-block"
                                                       style="margin-left:5px;" @onclick="(()=>StartDownloadFile(taskFile.PictureLink))"
                                                       role="button" data-placement="top" title="" data-original-title="Download">
                                                        DOWNLOAD FILE
                                                    </a>*@
                                                    <button type="button" class="btn btn-sm btn-danger"
                                                        data-toggle="modal" data-target="#PreDeleteSaveFileModal"
                                                        @onclick="(() => StartDeleteTaskPreImage(taskFile.Key))">
                                                        DELETE FILE
                                                    </button>
         
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <label class="text-center">NO FILES UPLOADED YET</label>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn btn-danger">CLOSE</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="AddTypeDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">ADD TASK TYPE</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>TASK TYPE: </label><br />
                                <Syncfusion.Blazor.Inputs.SfTextBox CssClass="BackgroundCustom"
                                                                ID="AddTaskTypeId" OnChange="CheckAddTaskType" @bind-Value="NewTaskType.TaskType">
                                </Syncfusion.Blazor.Inputs.SfTextBox>
                            </div>
                            <div class="form-group">
                                <label>EMAIL:</label><br />
                                <Syncfusion.Blazor.Inputs.SfTextBox CssClass="BackgroundCustom"
                                                                ID="FirstEmailId" OnChange="CheckAddTaskTypeFirstEmail" @bind-Value="NewTaskType.Email">
                                </Syncfusion.Blazor.Inputs.SfTextBox>
                            </div>
                            <div class="form-group WhiteText">
                                <label>SECOND EMAIL:</label><br />
                                <Syncfusion.Blazor.Inputs.SfTextBox CssClass="BackgroundCustomWhite" @bind-Value="NewTaskType.Email2">
                                </Syncfusion.Blazor.Inputs.SfTextBox>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="flaticon-cancel-12"></i>CANCEL</button>
                    <button type="button" class="btn btn-success"
                        @onclick="(async () => await HandleValidAddType())">
                        SAVE
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="AddTaskUpdate" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true"
     style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">ADD TASK UPDATE</h5>
                    <button type="button" class="close" data-dismiss="modal" @onclick="CleaneUpdateTaskFiles" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>UPDATE DATE</label>
                                    <Syncfusion.Blazor.Calendars.SfDatePicker ShowTodayButton="true"
                                                                          ID="OneTimeUpdDate" @bind-Value="@tasksTaskUpdate.UpdateDate">
                                        <Syncfusion.Blazor.Calendars.DatePickerEvents TValue="DateTime" ValueChange="CheckOneTimeUpdDate"></Syncfusion.Blazor.Calendars.DatePickerEvents>
                                    </Syncfusion.Blazor.Calendars.SfDatePicker>
                                    @*<div class="text-danger">@ErrorDateMessage</div>*@
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label style="font-weight:bold; font-size:14px;">IS TASK COMPLETED?</label><br />
                                    <Syncfusion.Blazor.Buttons.SfCheckBox Label="" TChecked="bool" @bind-Checked="@IsTaskDone">
                                    </Syncfusion.Blazor.Buttons.SfCheckBox>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <Syncfusion.Blazor.Inputs.SfUploader AllowedExtensions=".pdf,.txt,.pptx,.zip,.rar,.pdf,.pptx,.docx,.doc,.xlsx,.xlsb,.csv,.jpg,.png,.gif,.jpeg,.bmp,.svg,.jfif,.apng,.ico"
                                                                     ID="UploadFiles" AutoUpload="true" Multiple="false" @ref="UploadObjTask">
                                        <Syncfusion.Blazor.Inputs.UploaderEvents ValueChange="SelectImage" />
                                    </Syncfusion.Blazor.Inputs.SfUploader>
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>UPDATE</label>
                                    <Syncfusion.Blazor.Inputs.SfTextBox CssClass="customvalidate" Multiline="true" Placeholder="Enter Update"
                                                                    ID="OneTUpdNoteId" OnChange="CheckOneTimeNote" @bind-Value="@tasksTaskUpdate.Update">
                                    </Syncfusion.Blazor.Inputs.SfTextBox>
                                    @*<div class="text-danger">@ErrorUpdateMessage</div>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal" @onclick="CleaneUpdateTaskFiles"><i class="flaticon-cancel-12"></i>CANCEL</button>
                    <button type="button" class="btn btn-success"
                        @onclick="(async () => await AddNewUpdate())">
                        SAVE
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="SimpleEmailModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true"
     style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">SEND EMAIL</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>EMAIL BODY NOTE</label>
                                    <Syncfusion.Blazor.Inputs.SfTextBox @ref="SimpleEmailNoteRef" CssClass="BackgroundCustom"
                                                                    ID="OneTimeTaskSendMailId" HtmlAttributes="@htmlAttribute" Multiline="true" Placeholder="Enter Update Note"
                                                                    OnChange="CheckOneTimeTaskSendMail" @bind-Value="RespondBody">
                                    </Syncfusion.Blazor.Inputs.SfTextBox>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="flaticon-cancel-12"></i>CANCEL</button>
                    <button type="button" class="btn btn-primary"
                        @onclick="(() => SendTaskEmail())">
                        SEND EMAIL
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteTask" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">DELETE TASK</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    <h4>DO YOU WANT TO DELETE THIS TASK ?</h4>
                    <table class="table table-danger">
                        <tr>
                            <td>ID:</td>
                            <td>@SelectedTask.Id</td>
                        </tr>
                        <tr>
                            <td>TASK TYPE:</td>
                            <td>@SelectedTask.TaskType</td>
                        </tr>
                        <tr>
                            <td>DESCRIPTION:</td>
                            <td>@SelectedTask.Description</td>
                        </tr>
                        <tr>
                            <td>PRIORITY:</td>
                            <td>@SelectedTask.Priority</td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="flaticon-cancel-12"></i> NO</button>
                    <button type="button" data-dismiss="modal" class="btn btn-success"
                        @onclick="(async () => await ConfirmDelete())">
                        YES
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade bd-example-modal-xl" id="DescriptionModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">TASK Descrition</h5>
                </div>
                <div class="modal-body">
                    <label style="font-size:32px; font-weight:600;">@SelectedTask.Description</label>
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn btn-danger">CLOSE</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="EditUpdateDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true"
     style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">EDIT TASK UPDATE</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <EditForm Model="@UpdateEditContext" OnValidSubmit="HandleUpdateModel">
                            <div class="container">
                                <div class="row">
                                    @*<DataAnnotationsValidator />
                                        <ValidationSummary />*@
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>DATE: </label><br />
                                            <Syncfusion.Blazor.Calendars.SfDatePicker ID="OneTEditDateId" @bind-Value="UpdateEditContext.UpdateDate">
                                                <Syncfusion.Blazor.Calendars.DatePickerEvents TValue="DateTime" ValueChange="CheckOneTEditDate"></Syncfusion.Blazor.Calendars.DatePickerEvents>
                                            </Syncfusion.Blazor.Calendars.SfDatePicker>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>UPDATE: </label><br />
                                            <Syncfusion.Blazor.Inputs.SfTextBox Multiline="true"
                                                                            ID="OneTEditDescId" OnChange="CheckOneTEditDesc" @bind-Value="UpdateEditContext.Update">
                                            </Syncfusion.Blazor.Inputs.SfTextBox>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button class="btn btn-outline-success" style="margin-top:20px;align-items:center; margin-left:10px; float: right;" type="submit">SUBMIT</button>
                            <button class="btn btn-danger" style="margin-top:20px;align-items:center; float: right;"
                                data-type="button" data-dismiss="modal">
                                CANCEL
                            </button>
                        </EditForm>
                    </div>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>

    <!-- Multiple Images Modal -->
    <div class="modal fade bd-example-modal-xl" id="MultiImagesModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true" style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">RECURRING TASK IMAGES</h5>
                    <div>
                        @if(SelectedTask.PictureLink != null)
                        {
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ImageModal" @onclick="(() => ViewImage(SelectedTask.PictureLink))">
                                ODL IMAGE
                            </button>
                        }
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                        </button>
                    </div>
                    
                </div>
                <div class="modal-body">
                    @if (SelectedTaskImages.Any())
                    {
                        if (IsRenderingImages)
                        {
                            <p><em>LOADING...</em></p>
                        }
                        else
                        {
                            <div class="col-md-12" style="height:500px; overflow-y:scroll;">
                                <div class="row" style="margin-bottom:30px;">
                                    @foreach (var taskImage in SelectedTaskImages)
                                    {
                                        <div class="col-md-4" style="margin-bottom:10px;">
                                            <div class="card text-center cardhover">
                                                <div class="card-body" style="padding:0 !important">
                                                    <div class="form-group">
                                                        <img class="d-block w-100" src=@ConvertImagetoBase64(taskImage.PictureLink)
                                                             alt="RECURRING TASK IMAGE" style="height: 200px;"
                                                             data-toggle="modal" data-target="#ImageModal"
                                                             @onclick="(() => ViewImage(taskImage.PictureLink))">
                                                    </div>
                                                    @if (string.IsNullOrEmpty(taskImage.ImageNote))
                                                    {
                                                        <p class="card-text" style="color:black"> Click To View Image</p>
                                                    }
                                                    else
                                                    {
                                                        <p class="card-text" style="color:black"> @taskImage.ImageNote.ToUpper() </p>
                                                    }
                                                </div>
                                                <div class="card-footer" style="background-color:white">
                                                    <button type="button" class="btn btn-sm btn-outline-primary"
                                                        data-toggle="modal" data-target="#ImageNoteModal"
                                                        @onclick="(() => StartModifyingImageNote(taskImage))">
                                                        Change Note
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-primary"
                                                        @onclick="(() => PrintingImage(ConvertImagetoBase64(taskImage.PictureLink)))">
                                                        PRINT IMAGE
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-danger m-1"
                                                            data-toggle="modal" data-target="#DeleteImageModal"
                                                            @onclick="(() => StartDeleteTaskImage(taskImage))">
                                                            DELETE IMAGE
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <label class="text-center">NO IMAGES UPLOADED YET</label>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn btn-danger">CLOSE</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="RespondModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true"
     style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>EMAIL BODY NOTE</label>
                                    <Syncfusion.Blazor.Inputs.SfTextBox @ref="EmailNoteRef" CssClass="BackgroundCustomMultiLine" Multiline="true" Placeholder="Enter Update Note"
                                                                    ID="OneTaskEditNoteId" OnChange="CheckOneTaskEditNote" @bind-Value="RespondBody2">
                                    </Syncfusion.Blazor.Inputs.SfTextBox>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="flaticon-cancel-12"></i>CANCEL</button>
                    <button type="button" class="btn btn-success"
                        @onclick="(() => SendRespond())">
                        SEND EMAIL
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Multiple Files Modal -->
    <div class="modal fade bd-example-modal-xl" id="MultiFilesModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true" style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">ONE-TIME TASK Files</h5>
                    <div>
                        @if(SelectedTask.FileLink != null)
                        {
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#OldFileModal" @onclick="( () => ViewFile(SelectedTask))">
                                ODL File
                            </button>
                        }
                         <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                        </button>
                    </div>
                   
                </div>
                <div class="modal-body">
                    @if (SelectedTaskFiles.Any())
                    {
                        if (IsRenderingFiles)
                        {
                            <p><em>LOADING...</em></p>
                        }
                        else
                        {
                            <div class="col-md-12" style="height:500px; overflow-y:scroll;">
                                <div class="row" style="margin-bottom:30px;">
                                    @foreach (var taskImage in SelectedTaskFiles)
                                    {
                                        <div class="col-md-4" style="margin-bottom:10px;">
                                            <div class="card text-center cardhover">
                                                <div class="card-body" style="padding:0 !important">
                                                    <i class="@FileLogo.ReturnFileLogo(taskImage.FileName) m-2"></i>
                                                    <p class="card-text" style="color:black">@taskImage.FileName</p>
                                                </div>
                                                <div class="card-footer" style="background-color:white">
                                                    <a id="btn1" class="btn btn-info btn-sm text-white btn-block"
                                                       style="margin-left:5px;" @onclick="(()=>StartDownloadFile(taskImage.PictureLink))"
                                                       role="button" data-placement="top" title="" data-original-title="Download">
                                                        DOWNLOAD FILE
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-danger m-1"
                                                        data-toggle="modal" data-target="#DeleteFileModal"
                                                        @onclick="(() => StartDeleteTaskImage(taskImage))">
                                                        DELETE FILE
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <label class="text-center">NO IMAGES UPLOADED YET</label>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn btn-danger">CLOSE</button>
                </div>
            </div>
        </div>
    </div>

     <!--delete save Image modal-->
    <div class="modal fade" id="DeleteImageModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true" style="z-index: 10000; background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">DELETE Image</h5>
                </div>
                <div class="modal-body">
                    <h4>DO YOU WANT TO DELETE THIS Image ?</h4>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal">
                        NO
                    </button>
                    <button type="button" data-dismiss="modal" class="btn btn-success"
                            @onclick="(async () => await DeleteTaskImage())">
                        YES
                    </button>
                </div>
            </div>
        </div>
        </div>

    <!--delete save file modal-->
    <div class="modal fade" id="DeleteFileModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
            aria-hidden="true" style="z-index: 10000;background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">DELETE FILE</h5>
                </div>
                <div class="modal-body">
                    <h4>DO YOU WANT TO DELETE THIS FILE ?</h4>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal">
                        NO
                    </button>
                    <button type="button" data-dismiss="modal" class="btn btn-success"
                            @onclick="(async () => await DeleteTaskFile())">
                        YES
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!--delete previous Image modal-->
    <div class="modal fade" id="PreDeleteImageModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true" style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">DELETE Image</h5>
                </div>
                <div class="modal-body">
                    <h4>DO YOU WANT TO DELETE THIS Image ?</h4>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal">
                        NO
                    </button>
                    <button type="button" data-dismiss="modal" class="btn btn-success"
                        @onclick="(async () => await TaskPreImageRemove(SelectedPreTMV))">
                        YES
                    </button>
                </div>
            </div>
        </div>
    </div>



    <!--delete previous file modal-->
    <div class="modal fade" id="PreDeleteFileModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
            aria-hidden="true" style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">DELETE FILE</h5>
                </div>
                <div class="modal-body">
                    <h4>DO YOU WANT TO DELETE THIS FILE ?</h4>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal">
                        NO
                    </button>
                    <button type="button" data-dismiss="modal" class="btn btn-success m-2"
                            @onclick="(async () => await TaskPreFileRemove(SelectedPreTMV))">
                        YES
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!--delete previous Image modal-->
    <div class="modal fade" id="PreDeleteSaveImageModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true" style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">DELETE Image</h5>
                </div>
                <div class="modal-body">
                    <h4>DO YOU WANT TO DELETE THIS Image ?</h4>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal">
                        NO
                    </button>
                    <button type="button" data-dismiss="modal" class="btn btn-success"
                        @onclick="(async () => await TaskPreSaveImageRemove(SelectedPreTMV))">
                        YES
                    </button>
                </div>
            </div>
        </div>
    </div>



    <!--delete previous file modal-->
    <div class="modal fade" id="PreDeleteSaveFileModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
            aria-hidden="true" style="background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">DELETE FILE</h5>
                </div>
                <div class="modal-body">
                    <h4>DO YOU WANT TO DELETE THIS FILE ?</h4>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal">
                        NO
                    </button>
                    <button type="button" data-dismiss="modal" class="btn btn-success m-2"
                            @onclick="(async () => await TaskPreSaveFileRemove(SelectedPreTMV))">
                        YES
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!--Image note model-->
    <div class="modal fade bd-example-modal-xl" id="ImageNoteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true" style="z-index:10000">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">IMAGE NOTE</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label style="font-weight:bold">IMAGE NOTE</label>
                            <Syncfusion.Blazor.Inputs.SfTextBox @ref="ImageNoteBox" Multiline="true" Placeholder="Enter Note"
                                                            @bind-Value="@SelectedImageNote.ImageNote">
                            </Syncfusion.Blazor.Inputs.SfTextBox>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn btn-danger">CLOSE</button>
                    <button type="button" class="btn btn-success"
                        @onclick="ModifyImageNote">
                        SAVE
                    </button>
                </div>
            </div>
        </div>
    </div>

     <!-- Old File Modal -->
    <div class="modal fade bd-example-modal-xl" id="OldFileModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true" style="z-index:5555; background-color: rgba(0, 0, 0, 0.80);">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">File</h5>
                    
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    @if (OldTaskFile != null)
                    {
                        <div class="col-md-4" style="margin-bottom:10px;">
                            <div class="card text-center cardhover" style="width: 18rem;">
                                <div class="card-body text-center" style="padding:0 !important">
                                    <i class="@FileLogo.ReturnFileLogo(OldTaskFile) m-2"></i>
                                    
                                </div>
                                <div class="card-footer" style="background-color:white">
                                     <a id="btn1" class="btn btn-info btn-sm text-white btn-block"
                                    style="margin-left:5px;" @onclick="(()=>StartDownloadFile(OldTaskFile))"
                                    role="button" data-placement="top" title="" data-original-title="Download">
                                    DOWNLOAD FILE
                                    </a>
                                    
                                </div>

                            </div>
                        </div>
                    }
                    else
                    {
                        <em>No File Found</em>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn btn-danger">CLOSE</button>
                </div>
            </div>
        </div>
    </div>


    <!-- File Modal -->
    <div class="modal fade bd-example-modal-xl" id="FileModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true" style=z-index:5555"; background-color: rgba(0,0,0,0.80);">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">File</h5>
                    
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    @if (TaskFile != null)
                    {
                        <div class="col-md-4" style="margin-bottom:10px;">
                            <div class="card text-center cardhover" style="width: 18rem;">
                                <div class="card-body text-center" style="padding:0 !important">
                                    <i class="@FileLogo.ReturnFileLogo(TaskFile.PictureLink) m-2"></i>
                                    
                                </div>
                                <div class="card-footer" style="background-color:white">
                                     <a id="btn1" class="btn btn-info btn-sm text-white btn-block"
                                    style="margin-left:5px;" @onclick="(()=>StartDownloadFile(TaskFile.PictureLink))"
                                    role="button" data-placement="top" title="" data-original-title="Download">
                                    DOWNLOAD FILE
                                    </a>
                                    
                                </div>

                            </div>
                        </div>
                    }
                    else
                    {
                        <em>No File Found</em>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn btn-danger">CLOSE</button>
                </div>
            </div>
        </div>
    </div>

    <style>
        .FullWidth {
            width: 100%
        }

        .customvalidate {
            background-color: #F7EA02 !important;
        }

        a, a:hover, .highcontrast #dialog a, .highcontrast #dialog a:hover {
            color: inherit;
            text-decoration: none;
        }

        .fabric #target .e-dialog {
            height: 306px;
        }

        .material #target .e-dialog {
            height: 270px;
        }

        .bootstrap4 #target .e-dialog {
            height: 305px;
        }

        .label {
            margin-bottom: 0px !important;
        }

        #target .e-dialog {
            height: 270px;
        }

        #target {
            height: 500px;
        }

        .e-grid .e-detailindentcell {
            background-color: #EB711D;
        }

        .e-grid e-detailrowexpand {
            background-color: #EB711D;
        }

        .e-grid .e-filtered::before {
            color: #ff0000;
            font-size: 18px;
        }

        .fade {
            transition: opacity 0.01s linear;
        }

        .YellowText .e-input-group input.e-input, .e-float-input input,
        .e-float-input.e-control-wrapper input, .e-input-group textarea.e-input, .e-input-group.e-control-wrapper textarea.e-input,
        .e-float-input textarea, .e-float-input.e-control-wrapper textarea, .e-input-group .e-input[disabled],
        .e-input-group.e-control-wrapper .e-input[disabled], .e-input-group.e-disabled input.e-input,
        .e-input-group.e-control-wrapper.e-disabled input.e-input, .e-input-group.e-disabled textarea.e-input,
        .e-input-group.e-control-wrapper.e-disabled textarea.e-input {
            background-color: #FFFF64;
            color: inherit;
        }

        .e-gridheader {
            max-height: 40px;
        }

        .Textarea {
            height: 40px;
        }

        .e-grid .e-ftrchk {
            padding-bottom: 2px;
            padding-top: 2px;
        }

        .e-grid .e-altrow {
            /*background-color: #C4C4C4;*/
            background-color: #EBEBEB;
        }

        .e-grid .e-rowcell {
            text-transform: uppercase;
            font-size: 11px;
        }

        .e-grid .e-headercell {
            background-color: #24202C;
        }

        .e-headercell {
            color: white;
            font-size: 11px;
            font-weight: bold;
            width: 300px;
        }

        .e-grid .e-headercell, .e-grid .e-detailheadercell {
            background-color: #24202C;
            border-color: #24202C;
        }


        .e-grid .e-filtered::before {
            color: #ff0000;
            font-size: 18px;
        }

        .e-grid .e-gridheader .e-icons:not(.e-icon-hide):not(.e-check):not(.e-stop) {
            color: #ffffff;
        }

        .WhiteBackGround {
            background-color: #fff !important;
        }

        .icon {
            width: 45px;
        }

        {
            width: 45px;
        }
    </style>
}
