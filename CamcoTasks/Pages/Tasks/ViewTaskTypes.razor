@page "/viewtasktypes"

@using CamcoTasks.ViewModels.TasksTasksTaskTypeDTO;

@inherits CamcoTasks.Pages.Tasks.ViewTaskTypesModel


<div class="col-12 navbar navbar-expand screenLabel position-fixed top-row m-0 p-0 screenLabelStyle">
    <div class="col-12 m-0 p-0" style="font-size: 18px; text-align: left;"><span style="float: left">Ma / Me / OnTiTa / VwTaTy</span></div>
</div>
<div class="col-12" style="z-index: 9999;">
    <button style="margin-top:-68px;right:25px;height:45px;width:100px;"
            class="position-fixed btn btn-danger e-icons e-return-icon float-right" @onclick="(() => ReturnToTasks())">
    </button>
</div>

@if (Tasks != null)
{
    <div class="col-lg-12 control-section mt-2">
        <div class="content-wrapper">
            <div class="row col-md-12" id="GridDiv">
                <div class="col-md-6 text-left font-weight-bolder">
                    <h2>TASK TYPES</h2>
                </div>
                <div class="col-md-6 text-right">
                    <a href="javascript:void(0);" style="width:14rem;" class="btn btn-success form-control"
                       role="button" data-placement="top" title="" data-original-title="Add"
                       data-toggle="modal" data-target="#AddTypeDialog">
                        ADD NEW TASK TYPE
                    </a>
                </div>
                <br />
                <SfGrid @ref="TaskGrid" DataSource="@Tasks" ID="Typescontainer" AllowSelection="true" AllowSorting="true"
                        Toolbar="@(new List<object>() { "Search" })" AllowFiltering="true"
                        EnableVirtualization="true" AllowTextWrap="true" EnableHover="false" Height="600" RowHeight="38">
                    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                    <GridSelectionSettings CheckboxOnly="true" PersistSelection="true" Type="SelectionType.Multiple"></GridSelectionSettings>
                    <GridColumns>
                        <GridColumn TextAlign="TextAlign.Center" HeaderTextAlign="TextAlign.Center"
                                    Field=@nameof(TasksTasksTaskTypeViewModel.TaskType) HeaderText="TYPE" Visible="true" IsPrimaryKey="false" Width="75"></GridColumn>
                        <GridColumn TextAlign="TextAlign.Center" HeaderTextAlign="TextAlign.Center"
                                    Field=@nameof(TasksTasksTaskTypeViewModel.Email) HeaderText="EMAIL" Width="100" ClipMode="ClipMode.EllipsisWithTooltip"></GridColumn>
                        <GridColumn TextAlign="TextAlign.Center" HeaderTextAlign="TextAlign.Center"
                                    Field=@nameof(TasksTasksTaskTypeViewModel.Email2) HeaderText="SECOND EMAIL" Width="100" ClipMode="ClipMode.EllipsisWithTooltip"></GridColumn>
                        <GridColumn TextAlign="TextAlign.Center" HeaderTextAlign="TextAlign.Center"
                                    Field=@nameof(TasksTasksTaskTypeViewModel.TasksCount) HeaderText="ASSIGNED TASKS" Width="70" ClipMode="ClipMode.EllipsisWithTooltip"></GridColumn>
                        <GridColumn TextAlign="TextAlign.Center" HeaderTextAlign="TextAlign.Center" HeaderText=" " Width="200" ClipMode="ClipMode.EllipsisWithTooltip">
                            <Template>
                                @{
                                    <a data-placement="top" title="Edit Task" data-toggle="modal" data-target="#EditTypeDialog" type="button"
                                       style="font-size: 12px; margin-left: 3px; min-width: 45px; margin-bottom: 3px;"
                                       @onclick="(() => EditItem(context as TasksTasksTaskTypeViewModel))">
                                        <img src="/Icons/Finalized/Edit Button/Power User/Png Files/E2 30x30.png" class="icon" />
                                    </a>
                                }
                                @{
                                    <a data-placement="top" title="Edit Task" data-toggle="modal" type="button" data-target="#DeleteTaskType"
                                       style="font-size: 12px; margin-left: 3px; min-width: 45px; margin-bottom: 3px;"
                                       @onclick="(() => StartDeleteTaskType(context as TasksTasksTaskTypeViewModel))">
                                        <img src="/Icons/Finalized/Delete Button/Power User/Png Files/D3 30x30.png" class="icon" />
                                    </a>
                                }
                            </Template>
                        </GridColumn>
                    </GridColumns>
                </SfGrid>
            </div>
        </div>
    </div>
    <div class="modal fade" id="AddTypeDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">ADD TASK TYPE</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>TASK TYPE: </label><br />
                                <Syncfusion.Blazor.Inputs.SfTextBox CssClass="BackgroundCustom"
                                                                    ID="AddTaskTypeId" OnChange="CheckAddTaskType" @bind-Value="NewTaskType.TaskType">
                                </Syncfusion.Blazor.Inputs.SfTextBox>
                            </div>
                            <div class="form-group">
                                <label>EMAIL:</label><br />
                                <Syncfusion.Blazor.Inputs.SfTextBox CssClass="BackgroundCustom"
                                                                    ID="FirstEmailId" OnChange="CheckAddTaskTypeFirstEmail" @bind-Value="NewTaskType.Email">
                                </Syncfusion.Blazor.Inputs.SfTextBox>
                            </div>
                            <div class="form-group WhiteText">
                                <label>SECOND EMAIL:</label><br />
                                <Syncfusion.Blazor.Inputs.SfTextBox CssClass="BackgroundCustomWhite" @bind-Value="NewTaskType.Email2">
                                </Syncfusion.Blazor.Inputs.SfTextBox>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="flaticon-cancel-12"></i>CANCEL</button>
                    <button type="button" class="btn btn-success"
                            @onclick="(async () => await HandleValidAddType())">
                        SAVE
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="EditTypeDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">ADD TASK TYPE</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>TASK TYPE: </label><br />
                                <Syncfusion.Blazor.Inputs.SfTextBox CssClass="BackgroundCustom" @bind-Value="SelectedTask.TaskType">
                                </Syncfusion.Blazor.Inputs.SfTextBox>
                            </div>
                            <div class="form-group">
                                <label>EMAIL:</label><br />
                                <Syncfusion.Blazor.Inputs.SfTextBox CssClass="BackgroundCustom" @bind-Value="SelectedTask.Email">
                                </Syncfusion.Blazor.Inputs.SfTextBox>
                            </div>
                            <div class="form-group">
                                <label>SECOND EMAIL:</label><br />
                                <Syncfusion.Blazor.Inputs.SfTextBox CssClass="BackgroundCustomWhite" @bind-Value="SelectedTask.Email2">
                                </Syncfusion.Blazor.Inputs.SfTextBox>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="flaticon-cancel-12"></i>CANCEL</button>
                    <button type="button" class="btn btn-success"
                            @onclick="(async () => await HandleValidSubmit())">
                        SAVE
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="DeleteTaskType" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">DELETE TASK Type</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                <div class="modal-body">
                    <h4>DO YOU WANT TO DELETE THIS TASK Type?</h4>
                    <table class="table table-danger">
                        <tr>
                            <td>ID:</td>
                            <td>@SelectedTask.Id</td>
                        </tr>
                        <tr>
                            <td>TASK TYPE:</td>
                            <td>@SelectedTask.TaskType</td>
                        </tr>
                        <tr>
                            <td>Email 1:</td>
                            <td>@SelectedTask.Email</td>
                        </tr>
                        <tr>
                            <td>Email 2:</td>
                            <td>@SelectedTask.Email2</td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="flaticon-cancel-12"></i> NO</button>
                    <button type="button" data-dismiss="modal" class="btn btn-success"
                            @onclick="(async () => await ConfirmDelete())">
                        YES
                    </button>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <Loading />
}

<style type="text/css" class="cssStyles">
    .e-grid .e-altrow {
        /*background-color: aliceblue;*/
        background-color: #EBEBEB;
    }

    .e-grid .e-headercell {
        background-color: #24202C;
    }

    .e-grid .e-headercell {
        background-color: #24202C;
    }

    .e-headercell {
        color: white;
        font-size: 1.5rem;
        font-weight: bold;
    }

    a, a:hover, .highcontrast #dialog a, .highcontrast #dialog a:hover {
        color: inherit;
        text-decoration: none;
    }

    .fabric #target .e-dialog {
        height: 306px;
    }

    .material #target .e-dialog {
        height: 270px;
    }

    .bootstrap4 #target .e-dialog {
        height: 305px;
    }

    #target .e-dialog {
        height: 270px;
    }

    #target {
        height: 500px;
    }

    .e-grid .e-headercell, .e-grid .e-detailheadercell {
        background-color: #24202C;
        border-color: #24202C;
    }

    .e-grid .e-filtered::before {
        color: #ff0000;
        font-size: 18px;
    }

    .e-grid .e-gridheader .e-icons:not(.e-icon-hide):not(.e-check):not(.e-stop) {
        color: #ffffff;
    }
</style>

<style>
    a, a:hover, .highcontrast #dialog a, .highcontrast #dialog a:hover {
        color: inherit;
        text-decoration: none;
    }

    .fabric #target .e-dialog {
        height: 306px;
    }

    .material #target .e-dialog {
        height: 270px;
    }

    .bootstrap4 #target .e-dialog {
        height: 305px;
    }

    #target .e-dialog {
        height: 270px;
    }

    #target {
        height: 500px;
    }

    .e-grid .e-rowcell {
        text-transform: uppercase;
    }

    .e-input-group input.e-input, .e-input-group.e-control-wrapper input.e-input, .e-float-input input,
    .e-float-input.e-control-wrapper input, .e-input-group textarea.e-input, .e-input-group.e-control-wrapper textarea.e-input,
    .e-float-input textarea, .e-float-input.e-control-wrapper textarea, .e-input-group .e-input[disabled],
    .e-input-group.e-control-wrapper .e-input[disabled], .e-input-group.e-disabled input.e-input,
    .e-input-group.e-control-wrapper.e-disabled input.e-input, .e-input-group.e-disabled textarea.e-input,
    .e-input-group.e-control-wrapper.e-disabled textarea.e-input {
        background: #fdff8f;
        color: inherit;
    }
</style>
