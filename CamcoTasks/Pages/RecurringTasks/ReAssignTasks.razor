@page "/ReAssignTasks"

@using CamcoTasks.ViewModels.TasksTasksDTO;
@using CamcoTasks.ViewModels.TasksTasksTaskTypeDTO;

@inherits CamcoTasks.Pages.Tasks.ReAssignTasksModel


<div class="col-12 navbar navbar-expand screenLabel position-fixed top-row m-0 p-0 screenLabelStyle">
    <div class="col-12 m-0 p-0" style="font-size: 18px; text-align: left;"><span style="float: left">Ma / Me / OnTiTa / ReAsOnTiTa</span></div>
</div>
<div class="col-12 " style="z-index: 9999;">
    <button style="margin-top:-68px;right:25px;height:45px;width:100px;"
            class="position-fixed btn btn-danger e-icons e-return-icon float-right" @onclick="ReturnTasks">
    </button>
</div>

@if (IsSpinner)
{
    <Loading />
}
else
{
    <div class="row custom-top mt-1">
        <div class="col-md-6">
            <div class="pt-2">
                <h2>
                    RE-ASSIGN ONE-TIME TASKS
                </h2>
            </div>
        </div>

        @*<div class="col-md-3 pt-2">
            <a href="javascript:void(0);" class="btn btn-dark btn-block"
               role="button" data-placement="top>Return To Recurring Task"</a>
        </div>*@
    </div>

    <br />
    @if (Tasks != null)
    {

        <div class="col-lg-12 control-section">
            <div class="content-wrapper">
                <div class="row">
                    <SfGrid @ref="TasksGrid" DataSource="@Tasks" ID="container" AllowSelection="true"
                            AllowSorting="true" AllowFiltering="true"
                            AllowPaging="false" AllowTextWrap="true" EnableHover="false" RowHeight="38"
                            Toolbar="@(new List<object>() { "Print","Search" })">
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                        <GridPageSettings PageSizes="true"></GridPageSettings>
                        <GridSelectionSettings CheckboxOnly="true" PersistSelection="true" Type="SelectionType.Multiple"></GridSelectionSettings>
                        <GridColumns>
                            <GridColumn TextAlign="TextAlign.Center" HeaderTextAlign="TextAlign.Center" 
                                        Field=@nameof(TasksTasksViewModel.DateAdded) HeaderText="DATE ADDED" Width="120" Visible="true"
                                        IsPrimaryKey="false" Format="MM/dd/yyyy"></GridColumn>
                            <GridColumn TextAlign="TextAlign.Center" HeaderTextAlign="TextAlign.Center" 
                                        Field=@nameof(TasksTasksViewModel.Initiator) HeaderText="INITIATOR" Width="120" Visible="true"
                                        IsPrimaryKey="false"></GridColumn>
                            <GridColumn TextAlign="TextAlign.Center" HeaderTextAlign="TextAlign.Center" 
                                        Field=@nameof(TasksTasksViewModel.Description) HeaderText="DESCRIPTION" Width="600" Visible="true"
                                        IsPrimaryKey="false"></GridColumn>
                            <GridColumn TextAlign="TextAlign.Center" HeaderTextAlign="TextAlign.Center" HeaderText="FIX ALL" Width="200"
                                        ClipMode="ClipMode.EllipsisWithTooltip">
                                <Template>
                                    @{
                                        <a data-placement="top" title="Edit Task" data-toggle="tooltip" type="button"
                                           style="font-size: 12px; margin-left: 3px; min-width: 45px; margin-bottom: 3px;"
                                           @onclick="(e => StartFixTask(context as TasksTasksViewModel))">
                                            <img src="/Icons/Finalized/Edit Button/Power User/Png Files/E2 30x30.png" class="icon" />
                                        </a>
                                        <a data-placement="top" title="Edit Task" data-toggle="tooltip" type="button"
                                           style="font-size: 12px; margin-left: 3px; min-width: 45px; margin-bottom: 3px;"
                                           @onclick="(e => StartDeleteTask(context as TasksTasksViewModel))">
                                            <img src="/Icons/Finalized/Delete Button/Power User/Png Files/D3 30x30.png" class="icon" />
                                        </a>
                                    }
                                </Template>
                            </GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>

        <div class="modal fade" id="deleteRecurringTask" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">DELETE TASK</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                        </button>
                    </div>
                    <div class="modal-body">
                        <h4>DO YOU WANT TO DELETE?</h4>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-warning" data-dismiss="modal"><i class="flaticon-cancel-12"></i> No</button>
                        <button type="button" data-dismiss="modal" class="btn btn-primary"
                                @onclick="(async () => await ConfirmDelete())">
                            YES
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="FixModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">FIX TASK</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-12 form-group">
                                <label style="float:left;" class="col-form-label">NEW TASK TYPE:</label>
                                <SfComboBox CssClass="BackgroundCustom" TItem="TasksTasksTaskTypeViewModel"
                                            TValue="int?"
                                            DataSource="@taskTypes" ID="ReAssignOneTimeTask" ValueChange="CheckReAssignOneTimeTask"
                                            Autofill="true" AllowFiltering="true" 
                                            FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains"
                                            @bind-Value="SelectedEmployee.Id">
                                    <ComboBoxFieldSettings Text="TaskType" Value="Id"></ComboBoxFieldSettings>
                                </SfComboBox>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-danger" data-dismiss="modal"><i class="flaticon-cancel-12"></i>CANCEL</button>
                        <button type="button" class="btn btn-success"
                                @onclick="(async () => await FixAllTasks())">
                            SAVE
                        </button>
                    </div>
                </div>
            </div>
        </div>

    }
    else
    {
        <p><em>LOADING...</em></p>
    }

    <style type="text/css" class="cssStyles">
        .e-grid .e-altrow {
            /*background-color: #DBD7E3;*/
            background-color: #EBEBEB;
        }
    </style>

    <style>
        a, a:hover, .highcontrast #dialog a, .highcontrast #dialog a:hover {
            color: inherit;
            text-decoration: none;
        }

        .fabric #target .e-dialog {
            height: 306px;
        }

        .material #target .e-dialog {
            height: 270px;
        }

        .bootstrap4 #target .e-dialog {
            height: 305px;
        }

        #target .e-dialog {
            height: 270px;
        }

        #target {
            height: 500px;
        }
        .e-grid .e-headercell {
            background-color: #24202C;
            color: white;
        }

        .e-grid .e-altrow {
            background-color: #DBD7E3;
        }

        .e-grid .e-detailindentcell {
            background-color: #EB711D;
        }

        .e-grid e-detailrowexpand {
            background-color: #EB711D;
        }

        .e-input-group input.e-input, .e-input-group.e-control-wrapper input.e-input, .e-float-input input,
        .e-float-input.e-control-wrapper input, .e-input-group textarea.e-input, .e-input-group.e-control-wrapper textarea.e-input,
        .e-float-input textarea, .e-float-input.e-control-wrapper textarea, .e-input-group .e-input[disabled],
        .e-input-group.e-control-wrapper .e-input[disabled], .e-input-group.e-disabled input.e-input,
        .e-input-group.e-control-wrapper.e-disabled input.e-input, .e-input-group.e-disabled textarea.e-input,
        .e-input-group.e-control-wrapper.e-disabled textarea.e-input {
            background: #fdff8f;
            color: inherit;
        }

        .e-grid .e-rowcell {
            text-transform: uppercase;
        }

    </style>

}