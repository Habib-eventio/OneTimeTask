@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Inputs;
@using Syncfusion.Blazor.Popups;
@using Syncfusion.Blazor.Calendars;
@using CamcoTasks.Pages.RecurringTasks.ViewRecurringTasks.Files;
@using Syncfusion.Blazor.PdfViewerServer;
<style>
    #PostponeReasonId {
        border: 5px solid black;
    }

    .buttonStyle1 {
        background-color: rgb(32, 208, 82);
        color: white;
    }

        .buttonStyle1:hover {
            color: white;
            background-color: green;
        }

    .buttonStyle2 {
        background-color: rgb(68, 68, 200);
        color: white;
    }

        .buttonStyle2:hover {
            color: white;
            background-color: blue;
        }
</style>

<div class="modal fade" id="ViewSingleRecurringTaskModal" data-backdrop="static" data-keyboard="true" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable mw-100 w-75" role="document">
        <div class="modal-content" style="height: 100vh">
            @if (IsLoadTask)
            {
                <div class="spinner-border m-auto" role="status">
                    <span class="sr-only"></span>
                </div>
            }
            else
            {
                <div class="modal-header" style="padding-bottom: 0px;">
                    <h5 class="modal-title">VIEW RECURRING TASK</h5>
                    <div class="text-right">
                        <span>INITIATOR: @RecurringTask.Initiator</span>
                        <button class="btn btn-sm" @onclick="ActiveRecTaskUpdateComponent">
                            <img src="/Icons/ViewUpdates.png" style="width:125px;" />
                        </button>
                        <button class="btn btn-sm" @onclick="ActiveCreateRecurringTaskComponent">
                            <img src="Icons\Finalized\Edit Button\Non-Power User\Png Files\EdS2 40x125.png" />
                        </button>
                        <a href="javascript:void(0);" type="button" data-dismiss="modal" @onclick="CloseComponent">
                            <img src="/Icons/Finalized/Close Button/Non-Power User/Png Files/Close.png" />
                        </a>
                    </div>
                </div>
                <div class="modal-body" style="padding-top:0px;">
                    <div class="row" style="margin-bottom:20px;text-align:center">
                        <div class="col-md-6">
                            <h4 class="text-center">TASK DESCRIPTION/GUIDE</h4>

                            <div style="min-height: 400px; border:5px solid black" class="m-2">
                                <div>
                                    @if (string.IsNullOrEmpty(RecurringTask.InstructionFileLink))
                                    {
                                        @RecurringTask.Description
                                    }
                                    @if (!string.IsNullOrEmpty(RecurringTask.InstructionFileLink))
                                    {
                                        <SfPdfViewerServer DownloadFileName="downloaded"
                                                           DocumentPath="@RecurringTask.InstructionFileLink" />
                                    }
                                </div>
                            </div>

                            <div class="col-form-label ml-2">
                                <label class="row col-md-6 text-left">UPLOAD TASK GUIDE:</label>
                                <SfUploader AllowMultiple="false" ID="HowToUploadFilesId" AutoUpload="true"
                                            AllowedExtensions="@FileManagerService.RecurringTaskHowtoFileExtention"
                                            Multiple="false">
                                    <UploaderEvents ValueChange="SelectHowToFile" BeforeRemove="RemoveHowToFile" />
                                </SfUploader>
                            </div>

                        </div>
                        <div class="col-md-6">
                            <h4 class="text-center">TASK ID# @RecurringTask.Id UPDATE</h4>
                            <CreateRecUpdateComponent WithoutModel="true" SelectedUpdateTaskViewModel="@RecurringTask"
                                                      SuccessMessageCreateRecUpdateComponent="@SuccessMessage" />
                            @*
                        <div class="mb-2">
                        <div class="row">
                        <div class="col-md-4 text-left">
                        <label class="text-danger m-auto">UPDATE DATE: </label>
                        </div>
                        <div class="col-md-5"></div>
                        <div class="col-md-3"></div>
                        </div>
                        <div class="row">
                        <div class="col-md-4">
                        <SfDatePicker CssClass="BackgroundCustom" @bind-Value="@RecurringTaskUpdate.UpdateDate">
                        </SfDatePicker>
                        </div>
                        <div class="col-md-5"></div>
                        <div class="col-md-3"></div>
                        </div>
                        </div>
                        <div class="mb-2">
                        <div class="row">
                        <div class="col-md-4 text-left">
                        <label class="text-danger m-auto">COMPLETED BY: </label>
                        </div>
                        @if (RecurringTask.IsPassOrFail == true)
                        {
                        <div class="col-md-5">
                        <label class="text-danger m-auto">TASK PASSED?</label>
                        </div>
                        }
                        <div class="col-md-3"></div>
                        </div>
                        <div class="row">
                        <div class="col-md-4">
                        <SfTextBox CssClass="BackgroundCustom" @bind-Value="@RecurringTask.AuditPerson">
                        </SfTextBox>
                        </div>
                        @if (RecurringTask.IsPassOrFail == true)
                        {
                        @if (RecurringTaskUpdate.IsPass.HasValue
                        && RecurringTaskUpdate.IsPass.Value)
                        {
                        <div class="col-md-5">
                        <label class="bg-dark text-white px-2">YES</label>
                        </div>
                        }
                        else
                        {
                        <div class="col-md-5">
                        <label class="bg-dark text-white px-2">NO</label>
                        </div>
                        }
                        }
                        <div class="col-md-3"></div>
                        </div>
                        </div>
                        @if (RecurringTask.IsQuestionRequired.HasValue && RecurringTask.IsQuestionRequired.Value)
                        {
                        <div class="row">
                        <div class="col-md-4 text-left">
                        <label class="text-danger m-auto">TASK QUESTION: </label>
                        </div>
                        <div class="col-md-5">
                        @RecurringTask.Question
                        </div>
                        <div class="col-md-3"></div>
                        </div>
                        }
                        <div class="mb-2">
                        <div class="row">
                        @if (RecurringTask.IsQuestionRequired.HasValue && RecurringTask.IsQuestionRequired.Value
                        || RecurringTask.IsDescriptionMandatory.HasValue && RecurringTask.IsDescriptionMandatory.Value) {

                        <div class="col-md-12 text-left">
                        <label class="text-danger m-auto">UPDATE DESCRIPTION/ANSWER TO TASK QUESTION: </label>
                        </div>
                        }
                        else
                        {
                        <div class="col-md-12 text-left">
                        <label>ADDITIONAL NOTES: </label>
                        </div>
                        }

                        </div>
                        <div class="row">
                        @if (RecurringTask.IsQuestionRequired.HasValue && RecurringTask.IsQuestionRequired.Value
                        || RecurringTask.IsDescriptionMandatory.HasValue && RecurringTask.IsDescriptionMandatory.Value)
                        {
                        <div class="col-md-12 mx-0">
                        <SfTextBox CssClass="BackgroundCustom" Multiline="true"
                        HtmlAttributes="@htmlAttributeBig" @bind-Value="@RecurringTask.Question">
                        </SfTextBox>
                        </div>
                        }
                        else
                        {
                        <div class="col-md-12 mx-0">
                        <SfTextBox Multiline="true"
                        HtmlAttributes="@htmlAttributeBig" @bind-Value="@RecurringTaskUpdate.Update">
                        </SfTextBox>
                        </div>
                        }
                        </div>
                        </div>
                        <div class="mb-2">
                        <div class="row">
                        @if (RecurringTask.IsPicRequired.HasValue && RecurringTask.IsPicRequired.Value)
                        {
                        <div class="col-md-4 text-left">
                        <button class="btn btn-sm" @onclick="ActiveCameraComponent">
                        <img style="width:100px"
                        src="/Icons/Finalized/Take Picture Button/Non-Power User/Png Files/TpicS8 40x125.png" />
                        </button>
                        </div>
                        <div class="col-md-4 mt-1">
                        <button class="btn btn-sm buttonStyle2" @onclick="ActiveTaskUpdateMultipleFileComponent">
                        UPDATE PHOTO
                        </button>
                        </div>
                        }
                        @if (RecurringTask.IsGraphRequired)
                        {
                        <div class="col-md-4 mt-1">
                        <button style="background-color:rgb(22, 162, 184); color:white"
                        class="btn btn-sm" @onclick="ActiveViewGraphComponent">
                        VIEW GRAPH
                        </button>
                        </div>
                        }
                        </div>
                        </div>
                        <div class="row mb-2">
                        <div class="col-md-5 m-auto">
                        <button class="btn btn-sm buttonStyle1 mb-2" @onclick="ActiveRecTaskUpdateComponent">
                        COMPLETE UPDATE
                        </button>
                        </div>
                        </div>
                        <div class="pt-4">
                        @if (RecurringTask.IsQuestionRequired.HasValue && RecurringTask.IsQuestionRequired.Value
                        || RecurringTask.IsDescriptionMandatory.HasValue && RecurringTask.IsDescriptionMandatory.Value)
                        {
                        <div class="row mb-2">
                        <div class="col-md-12 text-left">
                        <label class="text-danger m-auto">UPDATE DESCRIPTION/ANSWER TO TASK QUESTION: </label>
                        </div>
                        *@
                        <br/>
                            <div class="col-md-9 m-auto">
                                <div class="d-flex justify-content-between">
                                    <a data-toggle="tooltip" data-placement="right" title="THIS BUTTON SHOULD BE USED TO POSTPONE TASKS DUE TO VACATION OR HOLIDAYS. THE TASK WILL POSTPONE UNTIL THE NEXT RECURRING FREQUENCY">
                                        <img src="/Icons/Finalized/Help Button/Power User/Png Files/Q3 30x30.png" style="width:17px;" />
                                    </a>
                                <button class="btn btn-sm btn-success rounded-pill" @onclick="(e) => ActiveRecurringTaskPostponeComponent(true)">
                                    POSTPONE TASK
                                </button>
                                    <button class="btn btn-sm btn-danger rounded-pill" @onclick="(e) => ActiveRecurringTaskPostponeComponent(false)">
                                    UNABLE TO COMPLETE TASK
                                </button>
                                    <a data-toggle="tooltip" data-placement="right" title="THIS BUTTON SHOULD BE USED WHEN SOMETHING OR SOMEONE IS PREVENTING YOU FROM COMPLETING A TASK">
                                        <img src="/Icons/Finalized/Help Button/Power User/Png Files/Q3 30x30.png" style="width:17px;" />
                                    </a>
                                </div>
                            </div>
                        </div>
                        </div>
                        </div>
                <div class="modal-footer">
                </div>
            }
        </div>
    </div>
</div>

<!--rec task update component-->
@if (IsActiveRecTaskUpdateComponent)
{
    <RecTaskUpdateComponent TaskForUpdate="@RecurringTask"
                            CloseRecTaskUpdateComponent="@DeactiveRecTaskUpdateComponent"
                            SuccessMessagRecUpdateComponent="@SuccessMessage"
                            RefreshToParentRecTaskUpdateComponent="@RefreshComponent" />
}

<!--create recurring task component-->
@if (IsActiveCreateRecurringTaskComponent)
{
    <CascadingValue Value="ViewRecurringTasksComponentRef" IsFixed="true">
        <CreateRecurringTaskComponent RecurringTask="@RecurringTask"
                                      RefreshParentComponent="@RefreshComponent"
                                      SendMessageToParent="@SuccessMessage"
                                      CloseCreateRecurringTaskComponent="@DeactiveCreateRecurringTaskComponent" />
    </CascadingValue>
}

<!--view graph component-->
@if (IsActiveViewGraphComponent)
{
    <ViewGraphComponent TaskForGraph="@RecurringTask"
                        SuccessMessageViewGraph="@DeactiveViewGraphComponent" />
}

<!--single file component-->
@if (IsActiveTaskUpdateMultipleFileComponent)
{
    <TaskUpdateMultipleFileComponent TaskUpdateViewModel="@RecurringTaskUpdate"
                                     CloseTaskUpdateMultipleFileComponent="@DeactiveTaskUpdateMultipleFileComponent" />
}

<!--camera component-->
@if (IsActiveCameraComponent)
{
    <CameraComponent SuccessMessageCamera="@DeactiveCameraComponent" />
}

<!--recurring task postpone component-->
@if (IsActiveRecurringTaskPostponeComponent)
{
    <RecurringTaskPostponeComponent isActivePostponedTask="@ActivePostponedTask"
                                    ClosePostponeComponent="@DeactiveRecurringTaskPostponeComponent"
                                    SuccessMessagePostponeComponent="@SuccessMessage"
                                    EventCallbackPostponeComponent="@EventCallbackRecurringTaskPostponeComponent"
                                    RecurringTask="@RecurringTask" />
}
